{"version":3,"sources":["views/pages/table-page/StandardTable/index.jsx","views/pages/table-page/QueryTable/index.jsx","views/pages/table-page/QueryTable/style/index.js"],"names":["StandardTable","props","Wrap","styled","section","Header","header","Content","div","columns","title","dataIndex","data","i","push","key","name","age","address","QueryTable","isMobile","useSelector","state","getIn","shallowEqual","useState","selectedRowKeys","setSelectedRowKeys","rowSelection","onChange","console","log","className","Item","label","placeholder","type","icon","PlusOutlined","InfoCircleFilled","length","onClick","dataSource","pagination","showSizeChanger","showQuickJumper","showTotal","total"],"mappings":"sGAAA,2BAMeA,UAJO,SAACC,GACrB,OAAO,iD,20ECmBT,ICpBO,IAAMC,EAAOC,IAAOC,QAAV,KAEJC,EAASF,IAAOG,OAAV,KAkDNC,EAAUJ,IAAOK,IAAV,KDhDdC,EAAU,CACd,CACEC,MAAO,OACPC,UAAW,QAEb,CACED,MAAO,MACPC,UAAW,OAEb,CACED,MAAO,UACPC,UAAW,YAITC,EAAO,GACJC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAKE,KAAK,CACRC,IAAKF,EACLG,KAAK,eAAD,OAAiBH,GACrBI,IAAK,GACLC,QAAQ,yBAAD,OAA2BL,KA+FvBM,UA3FI,SAAClB,GAAW,IACrBmB,EAAaC,aACnB,SAACC,GAAD,MAAY,CACVF,SAAUE,EAAMC,MAAM,CAAC,OAAQ,gBAEjCC,KAJMJ,SADoB,EAQkBK,mBAAS,IAR3B,mBAQrBC,EARqB,KAQJC,EARI,KAetBC,EAAe,CACnBF,kBACAG,SAPqB,SAACH,GACtBI,QAAQC,IAAI,4BAA6BL,GACzCC,EAAmBD,KAUrB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,uBAAMM,UAAW,CAAE,eAAe,EAAM,WAAYZ,IAClD,yBAAKY,UAAU,aACb,sBAAMC,KAAN,CAAWC,MAAM,4BACf,uBAAOC,YAAY,yBAGvB,yBAAKH,UAAU,aACb,sBAAMC,KAAN,CAAWC,MAAM,gBACf,uBAAOC,YAAY,yBAGvB,yBAAKH,UAAU,aACb,sBAAMC,KAAN,CAAWC,MAAM,wCACf,uBAAOC,YAAY,yBAGvB,yBAAKH,UAAU,aACb,sBAAMC,KAAN,CAAWC,MAAM,gBACf,uBAAOC,YAAY,yBAGvB,yBAAKH,UAAU,aACb,sBAAMC,KAAN,CAAWD,UAAU,YACnB,2CACA,uBAAQI,KAAK,WAAb,oBAMR,kBAAC,EAAD,KACE,yBAAKJ,UAAU,UACb,yBAAKA,UAAU,QAAf,4BACA,yBAAKA,UAAU,SACb,uBAAQI,KAAK,UAAUC,KAAM,kBAACC,EAAA,EAAD,OAA7B,kBAKJ,yBAAKN,UAAU,aACb,kBAACO,EAAA,EAAD,MADF,qBAEK,0BAAMP,UAAU,eAAeN,EAAgBc,QAFpD,SAGE,uBACEJ,KAAK,OACLK,QAAS,WACPd,EAAmB,MAHvB,iBASF,uBACEC,aAAcA,EACdnB,QAASA,EACTiC,WAAY9B,EACZ+B,WAAY,CACVC,iBAAiB,EACjBC,iBAAiB,EACjBC,UA/DQ,SAACC,GAAD,4BAAgBA,EAAhB","file":"static/js/table-pages.d4e527a1.chunk.js","sourcesContent":["import React from 'react'\n\nconst StandardTable = (props) => {\n  return <div>standard table</div>\n}\n\nexport default StandardTable\n","import React, { useState } from 'react'\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { Form, Input, Button, Table } from 'antd'\nimport { PlusOutlined, InfoCircleFilled } from '@ant-design/icons'\nimport * as Styled from './style'\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name'\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age'\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address'\n  }\n]\n\nconst data = []\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`\n  })\n}\n\nconst QueryTable = (props) => {\n  const { isMobile } = useSelector(\n    (state) => ({\n      isMobile: state.getIn(['base', 'isMobile'])\n    }),\n    shallowEqual\n  )\n\n  const [selectedRowKeys, setSelectedRowKeys] = useState([])\n\n  const onSelectChange = (selectedRowKeys) => {\n    console.log('selectedRowKeys changed: ', selectedRowKeys)\n    setSelectedRowKeys(selectedRowKeys)\n  }\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange\n  }\n\n  const showTotal = (total) => `总共${total}项`\n\n  return (\n    <Styled.Wrap>\n      <Styled.Header>\n        <Form className={{ 'header-form': true, 'not-flex': isMobile }}>\n          <div className='item-wrap'>\n            <Form.Item label='规则名称'>\n              <Input placeholder='请输入'></Input>\n            </Form.Item>\n          </div>\n          <div className='item-wrap'>\n            <Form.Item label='描述'>\n              <Input placeholder='请输入'></Input>\n            </Form.Item>\n          </div>\n          <div className='item-wrap'>\n            <Form.Item label='服务调用次数'>\n              <Input placeholder='请输入'></Input>\n            </Form.Item>\n          </div>\n          <div className='item-wrap'>\n            <Form.Item label='状态'>\n              <Input placeholder='请输入'></Input>\n            </Form.Item>\n          </div>\n          <div className='item-wrap'>\n            <Form.Item className='btn-wrap'>\n              <Button>重置</Button>\n              <Button type='primary'>查询</Button>\n            </Form.Item>\n          </div>\n        </Form>\n      </Styled.Header>\n\n      <Styled.Content>\n        <div className='header'>\n          <div className='left'>查询表格</div>\n          <div className='right'>\n            <Button type='primary' icon={<PlusOutlined />}>\n              新建\n            </Button>\n          </div>\n        </div>\n        <div className='selection'>\n          <InfoCircleFilled />\n          已选择<span className='select-item'>{selectedRowKeys.length}</span>项\n          <Button\n            type='link'\n            onClick={() => {\n              setSelectedRowKeys([])\n            }}\n          >\n            清空\n          </Button>\n        </div>\n        <Table\n          rowSelection={rowSelection}\n          columns={columns}\n          dataSource={data}\n          pagination={{\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal\n          }}\n        />\n      </Styled.Content>\n    </Styled.Wrap>\n  )\n}\n\nexport default QueryTable\n","import styled from 'styled-components'\n\nexport const Wrap = styled.section``\n\nexport const Header = styled.header`\n  padding: 24px 24px 0;\n  background: #fff;\n  box-sizing: border-box;\n  .header-form {\n    display: block;\n    flex-wrap: wrap;\n    box-sizing: border-box;\n\n    @media only screen and (min-width: 576px) {\n      display: block;\n      .item-wrap {\n        &:not(:first-child) {\n          margin-left: 0px;\n        }\n      }\n    }\n    @media only screen and (min-width: 768px) {\n      display: flex;\n      .item-wrap {\n        flex: 0 0 49%;\n      }\n    }\n    @media only screen and (min-width: 992px) {\n      display: flex;\n      .item-wrap {\n        flex: 0 0 32%;\n      }\n    }\n    @media only screen and (min-width: 1200px) {\n      display: flex;\n      .item-wrap {\n        flex: 0 0 32%;\n      }\n    }\n    .item-wrap {\n      margin-right: 1%;\n      .btn-wrap {\n        .ant-form-item-control-input-content {\n          display: flex;\n          /* justify-content: flex-end; */\n          button {\n            margin-right: 10px;\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const Content = styled.div`\n  margin-top: 24px;\n  padding: 12px 0%;\n  background: #fff;\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 24px;\n    .left {\n      color: rgba(0, 0, 0, 0.75);\n      font-weight: 500;\n      font-size: 16px;\n    }\n  }\n  .selection {\n    position: relative;\n    margin: 16px 0;\n    padding: 8px 15px 8px 12px;\n    color: rgba(0, 0, 0, 0.65);\n    line-height: 1.5715;\n    background-color: #e6f7ff;\n    border: 1px solid #91d5ff;\n    border-radius: 2px;\n    box-sizing: border-box;\n    .anticon {\n      margin-right: 10px;\n      color: #1890ff;\n    }\n    .select-item {\n      margin: 0 5px;\n      color: #1890ff;\n    }\n    button {\n      position: absolute;\n      right: 15px;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n  }\n  .ant-table-wrapper {\n  }\n  .ant-pagination-item {\n    a {\n      line-height: 32px;\n    }\n  }\n`\n"],"sourceRoot":""}